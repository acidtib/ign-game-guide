# Name of your application. Used to uniquely configure containers.
service: ign-gg

# Name of the container image.
image: acidtib/ign-gg

# Deploy to these servers.
servers:
  web:
    traefik: false
    hosts:
      - 51.89.219.181

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: ghcr.io
  username: acidtib
  password:
    - GITHUB_TOKEN

# Inject ENV variables into containers (secrets come from .env).
env:
  clear:
    NODE_ENV: production
  secret:
    - API_HOST
    - DISCORD_CLIENT_ID
    - DISCORD_TOKEN

# Call a broadcast command on deploys.
# audit_broadcast_cmd:
#   bin/broadcast_to_bc

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
builder:
  dockerfile: Dockerfile
  multiarch: false
  secrets:
    - GITHUB_TOKEN

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
#   path: /healthz
#   port: 4000
  cmd: /usr/src/app/bin/check_health
